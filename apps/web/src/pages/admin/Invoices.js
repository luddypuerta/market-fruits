import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import ReceiptLongIcon from "@mui/icons-material/ReceiptLong";
import Header from "@/components/shared/header/Header";
import { IconButton, Divider } from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";
import PaidIcon from "@mui/icons-material/Paid";
import { useEffect, useState } from "react";
import "./Invoices.scss";
import { Card, CardContent, Typography, Button, Grid, Dialog, DialogTitle, DialogContent, DialogActions, Table, TableBody, TableCell, TableRow, TableHead, Box, } from "@mui/material";
const Invoices = () => {
    const [invoices, setInvoices] = useState([]);
    const [selectedInvoice, setSelectedInvoice] = useState(null);
    useEffect(() => {
        const data = localStorage.getItem("invoices");
        setInvoices(data ? JSON.parse(data) : []);
    }, []);
    return (_jsxs(_Fragment, { children: [_jsx(Header, {}), _jsxs("section", { className: "admin-invoices", children: [_jsx("h2", { className: "admin-invoices__title", children: "Facturas Generadas" }), invoices.length === 0 ? (_jsx("p", { children: "No hay facturas registradas." })) : (_jsx(Grid, { container: true, spacing: 2, children: invoices.map((invoice) => (_jsx(Grid, { item: true, xs: 12, md: 6, lg: 4, children: _jsx(Card, { children: _jsxs(CardContent, { children: [_jsxs(Typography, { variant: "h6", gutterBottom: true, children: ["Cliente: ", invoice.customer.name] }), _jsxs(Typography, { variant: "body2", children: ["Email: ", invoice.customer.email] }), _jsxs(Typography, { variant: "body2", children: ["Pa\u00EDs: ", invoice.customer.country] }), _jsxs(Typography, { variant: "body2", children: ["Fecha: ", new Date(invoice.date).toLocaleString()] }), _jsxs(Typography, { variant: "body1", fontWeight: 600, children: ["Total: ", invoice.total.toLocaleString("es-CO"), " COP"] }), _jsx(Button, { variant: "outlined", color: "primary", sx: { mt: 1 }, onClick: () => setSelectedInvoice(invoice), children: "Ver detalle" })] }) }) }, invoice.id))) }))] }), _jsxs(Dialog, { open: !!selectedInvoice, onClose: () => setSelectedInvoice(null), fullWidth: true, maxWidth: "md", children: [_jsxs(DialogTitle, { sx: { display: "flex", alignItems: "center", justifyContent: "space-between" }, children: [_jsxs("div", { style: { display: "flex", alignItems: "center", gap: "0.5rem" }, children: [_jsx(ReceiptLongIcon, { color: "primary" }), _jsx("span", { children: "Detalle de Factura" })] }), _jsx(IconButton, { onClick: () => setSelectedInvoice(null), children: _jsx(CloseIcon, {}) })] }), _jsx(DialogContent, { dividers: true, sx: {
                            bgcolor: "#fafafa",
                            maxHeight: "500px",
                            overflowY: "auto",
                        }, children: selectedInvoice && (_jsxs(_Fragment, { children: [_jsxs(Typography, { variant: "subtitle1", gutterBottom: true, children: [_jsx("strong", { children: "Cliente:" }), " ", selectedInvoice.customer.name] }), _jsxs(Typography, { variant: "body2", gutterBottom: true, children: [_jsx("strong", { children: "Email:" }), " ", selectedInvoice.customer.email] }), _jsxs(Typography, { variant: "body2", gutterBottom: true, children: [_jsx("strong", { children: "Pa\u00EDs:" }), " ", selectedInvoice.customer.country] }), _jsxs(Typography, { variant: "body2", gutterBottom: true, children: [_jsx("strong", { children: "Fecha:" }), " ", new Date(selectedInvoice.date).toLocaleString()] }), _jsx(Divider, { sx: { my: 2 } }), _jsx(Box, { sx: { overflowX: "auto" }, children: _jsxs(Table, { size: "small", stickyHeader: true, children: [_jsx(TableHead, { children: _jsxs(TableRow, { children: [_jsx(TableCell, { children: "Producto" }), _jsx(TableCell, { align: "center", children: "Cantidad" }), _jsx(TableCell, { align: "right", children: "Precio" }), _jsx(TableCell, { align: "right", children: "Subtotal" })] }) }), _jsx(TableBody, { children: selectedInvoice.items.map((item) => (_jsxs(TableRow, { children: [_jsx(TableCell, { children: item.name }), _jsx(TableCell, { align: "center", children: item.quantity }), _jsx(TableCell, { align: "right", children: item.price.toLocaleString("es-CO") }), _jsx(TableCell, { align: "right", children: (item.quantity * item.price).toLocaleString("es-CO") })] }, item.id))) })] }) }), _jsx(Divider, { sx: { my: 2 } }), _jsxs(Typography, { variant: "h6", align: "right", color: "success.main", sx: { mt: 2 }, children: [_jsx(PaidIcon, { fontSize: "small", sx: { mr: 1 } }), "Total: ", selectedInvoice.total.toLocaleString("es-CO"), " COP"] })] })) }), _jsx(DialogActions, { children: _jsx(Button, { onClick: () => setSelectedInvoice(null), color: "primary", variant: "contained", children: "Cerrar" }) })] })] }));
};
export default Invoices;
